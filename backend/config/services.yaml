# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
  app.user_avatar_public_path: "%env(APP_USER_AVATAR_PUBLIC_PATH)%"
  frontend_url: "%env(URL_FRONTEND)%"

services:
  # default configuration for services in *this* file
  _defaults:
    autowire: true # Automatically injects dependencies in your services.
    autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

  # makes classes in src/ available to be used as services
  # this creates a service per class whose id is the fully-qualified class name
  App\:
    resource: "../src/"
    exclude:
      - "../src/DependencyInjection/"
      - "../src/Entity/"
      - "../src/Kernel.php"

  App\Controller\:
    resource: "../src/Controller"
    tags: ["controller.service_arguments"]

  App\Security\ApiAuthenticator:
    arguments:
      $entityManager: "@doctrine.orm.entity_manager"
      $rateLimiterFactory: "@limiter.login_throttling"

  App\EventListener\AuthenticationSuccessListener:
    tags:
      - {
          name: "kernel.event_listener",
          event: "security.authentication.success",
          method: "onAuthenticationSuccess",
        }
  App\EventListener\ExceptionListener:
    tags:
      - { name: "kernel.event_listener", event: "kernel.exception" }

  App\Controller\RegistrationController:
    arguments:
      $rateLimiterFactory: "@limiter.email_confirmation_limiter"

  App\Controller\SecurityController:
    arguments:
      $rateLimiterFactory: "@limiter.password_reset_limiter"

  App\Validator\UniqueFieldValidator:
    arguments:
      $em: "@doctrine.orm.entity_manager"
    tags: ["validator.constraint_validator"]

  App\Validator\ValidRolesValidator:
    tags: ["validator.constraint_validator"]

  App\Encoder\MultipartDecoder:
    tags: [serializer.encoder]

  App\Serializer\UploadedFileDenormalizer:
    tags: [serializer.normalizer]

  App\Mapper\UserMapper:
    arguments:
      $avatarPublicPath: "%app.user_avatar_public_path%"

  App\Mapper\FriendshipMapper:
    arguments:
      $avatarPublicPath: "%app.user_avatar_public_path%"

  App\Mapper\GroupMapper:
    arguments:
      $avatarPublicPath: "%app.user_avatar_public_path%"

  # add more service definitions when explicit configuration is needed
  # please note that last definitions always *replace* previous ones
